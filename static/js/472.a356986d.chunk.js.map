{"version":3,"file":"static/js/472.a356986d.chunk.js","mappings":"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","sources":["components/ReviewList/ReviewList.jsx","pages/Reviews.jsx","services/Fetch.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst ReviewList = ({ state }) => {\n  console.log(state);\n\n  return (\n    <ul>\n      {state.map(({ author, content, id, url }) => {\n        return (\n          <li key={id}>\n            <h2>Author: {author}</h2>\n            <p>{content}</p>\n            <a href={url}>Link</a>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nReviewList.propTypes = {\n  state: PropTypes.arrayOf(\n    PropTypes.shape({\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default ReviewList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/Fetch';\nimport ReviewList from 'components/ReviewList/ReviewList';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Reviews = () => {\n  const [state, setState] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    // IIFE\n    (async function fetch() {\n      setStatus(Status.PENDING);\n      try {\n        const moviesReviews = await fetchReviews(movieId, abortController);\n\n        setState([...moviesReviews]);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        console.log(error);\n        setStatus(Status.REJECTED);\n      }\n    })();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <section>\n      {status === Status.RESOLVED && <ReviewList state={state}></ReviewList>}\n      {!state.length && status === Status.RESOLVED && (\n        <h2>We don't have any reviews for this film</h2>\n      )}\n    </section>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nasync function fetchTrending(abortController) {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=a89ed47e53c22ac07455246c7a19999d',\n    { signal: abortController.signal }\n  );\n\n  return response.data.results.map(\n    ({ id, original_title, vote_average, poster_path, title }) => {\n      return {\n        id,\n        original_title,\n        vote_average,\n        poster_path: poster_path\n          ? `https://image.tmdb.org/t/p/w220_and_h330_face${poster_path}`\n          : 'https://via.placeholder.com/220x330',\n        title,\n      };\n    }\n  );\n}\n\nasync function fetchSearchMovie(filmName, abortController) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=a89ed47e53c22ac07455246c7a19999d&query=${filmName}`,\n    { signal: abortController.signal }\n  );\n\n  return response.data.results.map(\n    ({ id, original_title, vote_average, poster_path, title }) => {\n      return {\n        id,\n        original_title,\n        vote_average,\n        poster_path: poster_path\n          ? `https://image.tmdb.org/t/p/w220_and_h330_face${poster_path}`\n          : 'https://via.placeholder.com/220x330',\n        title,\n      };\n    }\n  );\n}\n\nasync function fetchMovieCredits(movieId, abortController) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=a89ed47e53c22ac07455246c7a19999d&language=en-US`,\n    { signal: abortController.signal }\n  );\n\n  return response.data.cast.map(({ profile_path, name, id }) => {\n    return {\n      profile_path: profile_path\n        ? `https://image.tmdb.org/t/p/w138_and_h175_face${profile_path}`\n        : 'https://via.placeholder.com/138x175',\n      name,\n      id,\n    };\n  });\n}\n\nasync function fetchReviews(movieId, abortController) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=a89ed47e53c22ac07455246c7a19999d&language=en-US&page=1`,\n    { signal: abortController.signal }\n  );\n\n  return response.data.results.map(({ author, content, id, url }) => {\n    return {\n      author,\n      content,\n      id,\n      url,\n    };\n  });\n}\n\nasync function fetchMovie(movieId, abortController) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=a89ed47e53c22ac07455246c7a19999d&language=en-US`,\n    { signal: abortController.signal }\n  );\n\n  const { vote_average, overview, title, genres, poster_path } = response.data;\n\n  return {\n    vote_average,\n    overview,\n    title,\n    genres: stringFromGanresArray(genres),\n    poster_path: poster_path\n      ? `https://image.tmdb.org/t/p/w300_and_h450_bestv2${poster_path}`\n      : 'https://via.placeholder.com/300x450',\n  };\n\n  function stringFromGanresArray(array) {\n    const string = array.reduce((acc, value) => {\n      return (acc += value.name);\n    }, '');\n\n    return string.split(/(?=[A-Z])/).join(', ');\n  }\n}\n\nexport {\n  fetchTrending,\n  fetchMovie,\n  fetchSearchMovie,\n  fetchMovieCredits,\n  fetchReviews,\n};\n"],"names":["state","console","log","map","author","content","id","url","href","Status","useState","setState","status","setStatus","movieId","useParams","useEffect","abortController","AbortController","fetchReviews","moviesReviews","abort","length","fetchTrending","axios","signal","response","data","results","original_title","vote_average","poster_path","title","fetchSearchMovie","filmName","fetchMovieCredits","cast","profile_path","name","fetchMovie","stringFromGanresArray","array","reduce","acc","value","split","join","overview","genres"],"sourceRoot":""}