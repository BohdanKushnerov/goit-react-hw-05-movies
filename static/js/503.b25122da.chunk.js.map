{"version":3,"file":"static/js/503.b25122da.chunk.js","mappings":"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","sources":["components/CastList/CastList.styled.js","components/CastList/CastList.jsx","pages/Cast.jsx","services/Fetch.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CreditsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n`;\n","import { CreditsList } from './CastList.styled';\nimport PropTypes from 'prop-types';\n\nconst CastList = ({ state }) => {\n  console.log(state);\n  return (\n    <CreditsList>\n      {state.map(({ profile_path, name, id }) => {\n        return (\n          <li key={id}>\n            <img src={profile_path} alt={name} />\n            <p>{name}</p>\n          </li>\n        );\n      })}\n    </CreditsList>\n  );\n};\n\nCastList.propTypes = {\n  state: PropTypes.arrayOf(\n    PropTypes.shape({\n      profile_path: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default CastList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'services/Fetch';\nimport CastList from 'components/CastList/CastList';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Cast = () => {\n  const [state, setState] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    // IIFE\n    (async function fetch() {\n      setStatus(Status.PENDING);\n      try {\n        const moviesCredits = await fetchMovieCredits(movieId, abortController);\n\n        setState([...moviesCredits]);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        console.log(error);\n        setStatus(Status.REJECTED);\n      }\n    })();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <section>\n      {status === Status.RESOLVED && <CastList state={state}></CastList>}\n      {!state.length && status === Status.RESOLVED && (\n        <h2>We don't have any cast added to this movie</h2>\n      )}\n    </section>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nasync function fetchTrending(abortController) {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=a89ed47e53c22ac07455246c7a19999d',\n    { signal: abortController.signal }\n  );\n\n  return response.data.results.map(\n    ({ id, original_title, vote_average, poster_path, title }) => {\n      return {\n        id,\n        original_title,\n        vote_average,\n        poster_path: poster_path\n          ? `https://image.tmdb.org/t/p/w220_and_h330_face${poster_path}`\n          : 'https://via.placeholder.com/220x330',\n        title,\n      };\n    }\n  );\n}\n\nasync function fetchSearchMovie(filmName, abortController) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=a89ed47e53c22ac07455246c7a19999d&query=${filmName}`,\n    { signal: abortController.signal }\n  );\n\n  return response.data.results.map(\n    ({ id, original_title, vote_average, poster_path, title }) => {\n      return {\n        id,\n        original_title,\n        vote_average,\n        poster_path: poster_path\n          ? `https://image.tmdb.org/t/p/w220_and_h330_face${poster_path}`\n          : 'https://via.placeholder.com/220x330',\n        title,\n      };\n    }\n  );\n}\n\nasync function fetchMovieCredits(movieId, abortController) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=a89ed47e53c22ac07455246c7a19999d&language=en-US`,\n    { signal: abortController.signal }\n  );\n\n  return response.data.cast.map(({ profile_path, name, id }) => {\n    return {\n      profile_path: profile_path\n        ? `https://image.tmdb.org/t/p/w138_and_h175_face${profile_path}`\n        : 'https://via.placeholder.com/138x175',\n      name,\n      id,\n    };\n  });\n}\n\nasync function fetchReviews(movieId, abortController) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=a89ed47e53c22ac07455246c7a19999d&language=en-US&page=1`,\n    { signal: abortController.signal }\n  );\n\n  return response.data.results.map(({ author, content, id, url }) => {\n    return {\n      author,\n      content,\n      id,\n      url,\n    };\n  });\n}\n\nasync function fetchMovie(movieId, abortController) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=a89ed47e53c22ac07455246c7a19999d&language=en-US`,\n    { signal: abortController.signal }\n  );\n\n  const { vote_average, overview, title, genres, poster_path } = response.data;\n\n  return {\n    vote_average,\n    overview,\n    title,\n    genres: stringFromGanresArray(genres),\n    poster_path: poster_path\n      ? `https://image.tmdb.org/t/p/w300_and_h450_bestv2${poster_path}`\n      : 'https://via.placeholder.com/300x450',\n  };\n\n  function stringFromGanresArray(array) {\n    const string = array.reduce((acc, value) => {\n      return (acc += value.name);\n    }, '');\n\n    return string.split(/(?=[A-Z])/).join(', ');\n  }\n}\n\nexport {\n  fetchTrending,\n  fetchMovie,\n  fetchSearchMovie,\n  fetchMovieCredits,\n  fetchReviews,\n};\n"],"names":["CreditsList","styled","state","console","log","map","profile_path","name","id","src","alt","Status","useState","setState","status","setStatus","movieId","useParams","useEffect","abortController","AbortController","fetchMovieCredits","moviesCredits","abort","length","fetchTrending","axios","signal","response","data","results","original_title","vote_average","poster_path","title","fetchSearchMovie","filmName","cast","fetchReviews","author","content","url","fetchMovie","stringFromGanresArray","array","reduce","acc","value","split","join","overview","genres"],"sourceRoot":""}