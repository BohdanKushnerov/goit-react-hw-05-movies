{"version":3,"file":"static/js/270.444338d7.chunk.js","mappings":"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","sources":["components/ReviewList/ReviewList.styled.js","components/ReviewList/ReviewList.jsx","pages/Reviews.jsx","services/Constants.js","services/FetchFunctions.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CommentList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const ReviewItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 8px;\n  background-color: #e5e8e9;\n  border-radius: 5px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 1px rgba(0, 0, 0, 0.14),\n    0 2px 1px rgba(0, 0, 0, 0.2);\n`;\n\nexport const ReviewLink = styled.a`\n  display: block;\n  width: 50px;\n  font-weight: 500;\n  color: gray;\n  border-radius: 5px;\n  outline: 1px solid gray;\n  text-align: center;\n\n  :hover {\n    color: orangered;\n    outline: 1px solid orangered;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { CommentList, ReviewItem, ReviewLink } from './ReviewList.styled';\n\nconst ReviewList = ({ state }) => {\n  return (\n    <CommentList>\n      {state.map(({ author, content, id, url }) => {\n        return (\n          <ReviewItem key={id}>\n            <h2>Author: {author}</h2>\n            <p>{content}</p>\n            <ReviewLink href={url} target=\"_blank\">\n              Link\n            </ReviewLink>\n          </ReviewItem>\n        );\n      })}\n    </CommentList>\n  );\n};\n\nReviewList.propTypes = {\n  state: PropTypes.arrayOf(\n    PropTypes.shape({\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default ReviewList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/FetchFunctions';\nimport ReviewList from 'components/ReviewList/ReviewList';\nimport Status from 'services/Constants';\n\nconst Reviews = () => {\n  const [state, setState] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    // IIFE\n    (async function fetch() {\n      setStatus(Status.PENDING);\n      try {\n        const moviesReviews = await fetchReviews(movieId, abortController);\n\n        setState([...moviesReviews]);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        console.log(error);\n        setStatus(Status.REJECTED);\n      }\n    })();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <section>\n      {status === Status.RESOLVED && <ReviewList state={state}></ReviewList>}\n      {!state.length && status === Status.RESOLVED && (\n        <h2>We don't have any reviews for this film</h2>\n      )}\n      {status === Status.REJECTED && (\n        <h2>\n          An error occurred, we could not upload the data, please try reloading\n          the page and try again :)\n        </h2>\n      )}\n    </section>\n  );\n};\n\nexport default Reviews;\n","const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default Status;\n","import axios from 'axios';\n\nasync function fetchTrending(abortController) {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=a89ed47e53c22ac07455246c7a19999d',\n    { signal: abortController.signal }\n  );\n\n  return response.data.results.map(\n    ({ id, original_title, vote_average, poster_path, title }) => {\n      return {\n        id,\n        original_title,\n        vote_average,\n        poster_path: poster_path\n          ? `https://image.tmdb.org/t/p/w220_and_h330_face${poster_path}`\n          : 'https://via.placeholder.com/220x330',\n        title,\n      };\n    }\n  );\n}\n\nasync function fetchSearchMovie(filmName, abortController) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=a89ed47e53c22ac07455246c7a19999d&query=${filmName}`,\n    { signal: abortController.signal }\n  );\n\n  return response.data.results.map(\n    ({ id, original_title, vote_average, poster_path, title }) => {\n      return {\n        id,\n        original_title,\n        vote_average,\n        poster_path: poster_path\n          ? `https://image.tmdb.org/t/p/w220_and_h330_face${poster_path}`\n          : 'https://via.placeholder.com/220x330',\n        title,\n      };\n    }\n  );\n}\n\nasync function fetchMovieCredits(movieId, abortController) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=a89ed47e53c22ac07455246c7a19999d&language=en-US`,\n    { signal: abortController.signal }\n  );\n\n  return response.data.cast.map(({ profile_path, name, id }) => {\n    return {\n      profile_path: profile_path\n        ? `https://image.tmdb.org/t/p/w138_and_h175_face${profile_path}`\n        : 'https://via.placeholder.com/138x175',\n      name,\n      id,\n    };\n  });\n}\n\nasync function fetchReviews(movieId, abortController) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=a89ed47e53c22ac07455246c7a19999d&language=en-US&page=1`,\n    { signal: abortController.signal }\n  );\n\n  return response.data.results.map(({ author, content, id, url }) => {\n    return {\n      author,\n      content,\n      id,\n      url,\n    };\n  });\n}\n\nasync function fetchMovie(movieId, abortController) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=a89ed47e53c22ac07455246c7a19999d&language=en-US`,\n    { signal: abortController.signal }\n  );\n\n  const { vote_average, overview, title, genres, poster_path } = response.data;\n\n  return {\n    vote_average,\n    overview,\n    title,\n    genres: stringFromGanresArray(genres),\n    poster_path: poster_path\n      ? `https://image.tmdb.org/t/p/w300_and_h450_bestv2${poster_path}`\n      : 'https://via.placeholder.com/300x450',\n  };\n\n  function stringFromGanresArray(array) {\n    const string = array.reduce((acc, value) => {\n      return (acc += value.name);\n    }, '');\n\n    return string.split(/(?=[A-Z])/).join(', ');\n  }\n}\n\nexport {\n  fetchTrending,\n  fetchMovie,\n  fetchSearchMovie,\n  fetchMovieCredits,\n  fetchReviews,\n};\n"],"names":["CommentList","styled","ReviewItem","ReviewLink","state","map","author","content","id","url","href","target","useState","setState","Status","status","setStatus","movieId","useParams","useEffect","abortController","AbortController","fetchReviews","moviesReviews","console","log","abort","length","IDLE","PENDING","RESOLVED","REJECTED","fetchTrending","axios","signal","response","data","results","original_title","vote_average","poster_path","title","fetchSearchMovie","filmName","fetchMovieCredits","cast","profile_path","name","fetchMovie","stringFromGanresArray","array","reduce","acc","value","split","join","overview","genres"],"sourceRoot":""}